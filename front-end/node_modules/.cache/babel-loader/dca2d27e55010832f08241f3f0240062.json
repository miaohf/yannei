{"remainingRequest":"D:\\mycode\\Yanei\\front-end\\node_modules\\babel-loader\\lib\\index.js!D:\\mycode\\Yanei\\front-end\\node_modules\\vuetify\\lib\\components\\VCalendar\\modes\\stack.js","dependencies":[{"path":"D:\\mycode\\Yanei\\front-end\\node_modules\\vuetify\\lib\\components\\VCalendar\\modes\\stack.js","mtime":1668956706694},{"path":"D:\\mycode\\Yanei\\front-end\\babel.config.js","mtime":1580387978000},{"path":"D:\\mycode\\Yanei\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668947705996},{"path":"D:\\mycode\\Yanei\\front-end\\node_modules\\babel-loader\\lib\\index.js","mtime":1668956708481}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["getOverlapGroupHandler","getVisuals","hasOverlap","getNormalizedRange","getTimestampIdentifier","FULL_WIDTH","DEFAULT_OFFSET","WIDTH_MULTIPLIER","stack","events","firstWeekday","overlapThreshold","handler","day","dayEvents","timed","reset","dayStart","visuals","groups","getGroups","group","nodes","visual","child","getNode","index","getNextIndex","parent","getParent","sibling","start","end","addTime","children","push","getOverlappingRange","length","grand","grandNext","calculateBounds","sort","a","b","left","event","startTimestampIdentifier","node","columns","getMaxChildIndex","spaceLeft","spaceWidth","offset","Math","min","columnWidthMultiplier","getColumnWidthMultiplier","columnOffset","columnWidth","width","hasFullWidth","maxColumn","minColumn","reduce","c","getOverlappingIndices","indices","other","i","indexMin","indexMax","returnFirstColumn","overlapping","first","n","filter","added","max","childMax","identifier","minutes","removeMinutes","totalMinutes","addHours","floor","addMinutes"],"sourceRoot":"","sources":["../../../../src/components/VCalendar/modes/stack.ts"],"sourcesContent":["import { CalendarEventOverlapMode, CalendarEventVisual } from 'vuetify/types'\nimport { getOverlapGroupHandler, getVisuals, hasOverlap, getNormalizedRange } from './common'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\ninterface Group {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\ninterface Node {\n  parent: Node | null\n  sibling: boolean\n  index: number\n  visual: CalendarEventVisual\n  start: number\n  end: number\n  children: Node[]\n}\n\nconst FULL_WIDTH = 100\n\nconst DEFAULT_OFFSET = 5\n\nconst WIDTH_MULTIPLIER = 1.7\n\n/**\n * Variation of column mode where events can be stacked. The priority of this\n * mode is to stack events together taking up the least amount of space while\n * trying to ensure the content of the event is always visible as well as its\n * start and end. A sibling column has intersecting event content and must be\n * placed beside each other. Non-sibling columns are offset by 5% from the\n * previous column. The width is scaled by 1.7 so the events overlap and\n * whitespace is reduced. If there is a hole in columns the event width is\n * scaled up so it intersects with the next column. The columns have equal\n * width in the space they are given. If the event doesn't have any to the\n * right of it that intersect with it's content it's right side is extended\n * to the right side.\n */\n\nexport const stack: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  // eslint-disable-next-line max-statements\n  return (day, dayEvents, timed, reset) => {\n    if (!timed) {\n      return handler.getVisuals(day, dayEvents, timed, reset)\n    }\n\n    const dayStart = getTimestampIdentifier(day)\n    const visuals = getVisuals(dayEvents, dayStart)\n    const groups = getGroups(visuals, dayStart)\n\n    for (const group of groups) {\n      const nodes: Node[] = []\n\n      for (const visual of group.visuals) {\n        const child = getNode(visual, dayStart)\n        const index = getNextIndex(child, nodes)\n\n        if (index === false) {\n          const parent = getParent(child, nodes)\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            child.index = parent.index + 1\n            parent.children.push(child)\n          }\n        } else {\n          const [parent] = getOverlappingRange(child, nodes, index - 1, index - 1)\n          const children = getOverlappingRange(child, nodes, index + 1, index + nodes.length, true)\n\n          child.children = children\n          child.index = index\n\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            parent.children.push(child)\n          }\n\n          for (const grand of children) {\n            if (grand.parent === parent) {\n              grand.parent = child\n            }\n\n            const grandNext = grand.index - child.index <= 1\n            if (grandNext && child.sibling &&\n              hasOverlap(child.start, addTime(child.start, overlapThreshold), grand.start, grand.end)) {\n              grand.sibling = true\n            }\n          }\n        }\n\n        nodes.push(child)\n      }\n\n      calculateBounds(nodes, overlapThreshold)\n    }\n\n    visuals.sort((a, b) => (a.left - b.left) || (a.event.startTimestampIdentifier - b.event.startTimestampIdentifier))\n\n    return visuals\n  }\n}\n\nfunction calculateBounds (nodes: Node[], overlapThreshold: number) {\n  for (const node of nodes) {\n    const { visual, parent } = node\n    const columns = getMaxChildIndex(node) + 1\n    const spaceLeft = parent ? parent.visual.left : 0\n    const spaceWidth = FULL_WIDTH - spaceLeft\n    const offset = Math.min(DEFAULT_OFFSET, FULL_WIDTH / columns)\n    const columnWidthMultiplier = getColumnWidthMultiplier(node, nodes)\n    const columnOffset = spaceWidth / (columns - node.index + 1)\n    const columnWidth = spaceWidth / (columns - node.index + (node.sibling ? 1 : 0)) * columnWidthMultiplier\n\n    if (parent) {\n      visual.left = node.sibling\n        ? spaceLeft + columnOffset\n        : spaceLeft + offset\n    }\n\n    visual.width = hasFullWidth(node, nodes, overlapThreshold)\n      ? FULL_WIDTH - visual.left\n      : Math.min(FULL_WIDTH - visual.left, columnWidth * WIDTH_MULTIPLIER)\n  }\n}\n\nfunction getColumnWidthMultiplier (node: Node, nodes: Node[]): number {\n  if (!node.children.length) {\n    return 1\n  }\n\n  const maxColumn = node.index + nodes.length\n  const minColumn = node.children.reduce((min, c) => Math.min(min, c.index), maxColumn)\n\n  return minColumn - node.index\n}\n\nfunction getOverlappingIndices (node: Node, nodes: Node[]): number[] {\n  const indices: number[] = []\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end)) {\n      indices.push(other.index)\n    }\n  }\n  return indices\n}\n\nfunction getNextIndex (node: Node, nodes: Node[]): number | false {\n  const indices = getOverlappingIndices(node, nodes)\n  indices.sort()\n\n  for (let i = 0; i < indices.length; i++) {\n    if (i < indices[i]) {\n      return i\n    }\n  }\n  return false\n}\n\nfunction getOverlappingRange (node: Node, nodes: Node[], indexMin: number, indexMax: number, returnFirstColumn = false): Node[] {\n  const overlapping: Node[] = []\n  for (const other of nodes) {\n    if (other.index >= indexMin && other.index <= indexMax && hasOverlap(node.start, node.end, other.start, other.end)) {\n      overlapping.push(other)\n    }\n  }\n  if (returnFirstColumn && overlapping.length > 0) {\n    const first = overlapping.reduce((min, n) => Math.min(min, n.index), overlapping[0].index)\n    return overlapping.filter(n => n.index === first)\n  }\n  return overlapping\n}\n\nfunction getParent (node: Node, nodes: Node[]): Node | null {\n  let parent: Node | null = null\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end) && (parent === null || other.index > parent.index)) {\n      parent = other\n    }\n  }\n  return parent\n}\n\nfunction hasFullWidth (node: Node, nodes: Node[], overlapThreshold: number): boolean {\n  for (const other of nodes) {\n    if (other !== node &&\n      other.index > node.index &&\n      hasOverlap(node.start, addTime(node.start, overlapThreshold), other.start, other.end)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction getGroups (visuals: CalendarEventVisual[], dayStart: number): Group[] {\n  const groups: Group[] = []\n\n  for (const visual of visuals) {\n    const [start, end] = getNormalizedRange(visual.event, dayStart)\n    let added = false\n\n    for (const group of groups) {\n      if (hasOverlap(start, end, group.start, group.end)) {\n        group.visuals.push(visual)\n        group.end = Math.max(group.end, end)\n        added = true\n        break\n      }\n    }\n\n    if (!added) {\n      groups.push({ start, end, visuals: [visual] })\n    }\n  }\n\n  return groups\n}\n\nfunction getNode (visual: CalendarEventVisual, dayStart: number): Node {\n  const [start, end] = getNormalizedRange(visual.event, dayStart)\n\n  return {\n    parent: null,\n    sibling: true,\n    index: 0,\n    visual,\n    start,\n    end,\n    children: [],\n  }\n}\n\nfunction getMaxChildIndex (node: Node): number {\n  let max = node.index\n  for (const child of node.children) {\n    const childMax = getMaxChildIndex(child)\n    if (childMax > max) {\n      max = childMax\n    }\n  }\n  return max\n}\n\nfunction addTime (identifier: number, minutes: number): number {\n  const removeMinutes = identifier % 100\n  const totalMinutes = removeMinutes + minutes\n  const addHours = Math.floor(totalMinutes / 60)\n  const addMinutes = totalMinutes % 60\n\n  return identifier - removeMinutes + addHours * 100 + addMinutes\n}\n"]}]}